// <auto-generated />
using System;
using MTR.AgendamentoSalas.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTR.AgendamentoSalas.API.Migrations
{
    [DbContext(typeof(AppDbContexto))]
    partial class AppDbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MTR.AgendamentoSalas.API.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("locais");
                });

            modelBuilder.Entity("MTR.AgendamentoSalas.API.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cafe")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("servir_cafe")
                        .HasAnnotation("Relational:JsonPropertyName", "servir_cafe");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_fim")
                        .HasAnnotation("Relational:JsonPropertyName", "data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio")
                        .HasAnnotation("Relational:JsonPropertyName", "data_inicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadePessoas")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_pessoas")
                        .HasAnnotation("Relational:JsonPropertyName", "quantidade_pessoas");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("responsavel");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("SalaId");

                    b.ToTable("reservas");
                });

            modelBuilder.Entity("MTR.AgendamentoSalas.API.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("salas");
                });

            modelBuilder.Entity("MTR.AgendamentoSalas.API.Models.Reserva", b =>
                {
                    b.HasOne("MTR.AgendamentoSalas.API.Models.Local", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTR.AgendamentoSalas.API.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Sala");
                });
#pragma warning restore 612, 618
        }
    }
}
